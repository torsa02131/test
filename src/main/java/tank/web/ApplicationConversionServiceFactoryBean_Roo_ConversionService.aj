// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package tank.web;

import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;
import tank.domain.Base;
import tank.domain.KUYTOR;
import tank.domain.Topping;
import tank.web.ApplicationConversionServiceFactoryBean;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Base, String> ApplicationConversionServiceFactoryBean.getBaseToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<tank.domain.Base, java.lang.String>() {
            public String convert(Base base) {
                return new StringBuilder().append(base.getBase()).toString();
            }
        };
    }
    
    public Converter<Long, Base> ApplicationConversionServiceFactoryBean.getIdToBaseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, tank.domain.Base>() {
            public tank.domain.Base convert(java.lang.Long id) {
                return Base.findBase(id);
            }
        };
    }
    
    public Converter<String, Base> ApplicationConversionServiceFactoryBean.getStringToBaseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, tank.domain.Base>() {
            public tank.domain.Base convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Base.class);
            }
        };
    }
    
    public Converter<KUYTOR, String> ApplicationConversionServiceFactoryBean.getKUYTORToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<tank.domain.KUYTOR, java.lang.String>() {
            public String convert(KUYTOR kUYTOR) {
                return new StringBuilder().append(kUYTOR.getTOR()).toString();
            }
        };
    }
    
    public Converter<Long, KUYTOR> ApplicationConversionServiceFactoryBean.getIdToKUYTORConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, tank.domain.KUYTOR>() {
            public tank.domain.KUYTOR convert(java.lang.Long id) {
                return KUYTOR.findKUYTOR(id);
            }
        };
    }
    
    public Converter<String, KUYTOR> ApplicationConversionServiceFactoryBean.getStringToKUYTORConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, tank.domain.KUYTOR>() {
            public tank.domain.KUYTOR convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), KUYTOR.class);
            }
        };
    }
    
    public Converter<Topping, String> ApplicationConversionServiceFactoryBean.getToppingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<tank.domain.Topping, java.lang.String>() {
            public String convert(Topping topping) {
                return new StringBuilder().append(topping.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Topping> ApplicationConversionServiceFactoryBean.getIdToToppingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, tank.domain.Topping>() {
            public tank.domain.Topping convert(java.lang.Long id) {
                return Topping.findTopping(id);
            }
        };
    }
    
    public Converter<String, Topping> ApplicationConversionServiceFactoryBean.getStringToToppingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, tank.domain.Topping>() {
            public tank.domain.Topping convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Topping.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getBaseToStringConverter());
        registry.addConverter(getIdToBaseConverter());
        registry.addConverter(getStringToBaseConverter());
        registry.addConverter(getKUYTORToStringConverter());
        registry.addConverter(getIdToKUYTORConverter());
        registry.addConverter(getStringToKUYTORConverter());
        registry.addConverter(getToppingToStringConverter());
        registry.addConverter(getIdToToppingConverter());
        registry.addConverter(getStringToToppingConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
